{"version":3,"sources":["logo.svg","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","console","log","WalletConnectProvider","WalletLink","App","useDispatch","useSelector","useState","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","GWEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","name","content","charSet","rel","href","size","id","integrity","crossOrigin","className","src","style","height","target","marginLeft","display","verticalAlign","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0dd8219b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLink from \"walletlink\";\nimport ReactGA from 'react-ga';\n\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\n// wallet connect for coinbase wallet\n// adapted from https://github.com/HashLips/hashlips_nft_minting_dapp/issues/69\nconst INFURA_ID = \"\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n      rpc: {\n        1: \"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\" // ETH\n      },\n    },\n  },\n  walletlink: {\n    package: WalletLink, // Required\n    options: {\n      appName: \"Calm Buddhas NFT\", // Required\n      infuraId: \"\", // Required unless you provide a JSON RPC url; see `rpc` below\n      rpc: \"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\", // Optional if `infuraId` is provided; otherwise it's required\n      chainId: 1, // Optional. It defaults to 1 if not provided\n      appLogoUrl: \"https://serenitytoken.art/Content/images/SerenityLogo_r.png\", \n      darkMode: false, // Optional. Use dark theme, defaults to false\n    },\n  },\n};\n// end wallet connect options\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n\n      // wallet connect for coinbase wallet\n      // adapted from https://github.com/HashLips/hashlips_nft_minting_dapp/issues/69\n      try {\n        localStorage.removeItem(\"walletconnect\");\n        localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\n        const web3Modal = new Web3Modal({\n          network: \"mainnet\", // optional\n          cacheProvider: false, // optional\n          providerOptions, // required\n        });\n        const provider = await web3Modal.connect();\n        const web3 = new Web3(provider);\n        console.log(\"web\", web3);\n  \n        Web3EthContract.setProvider(provider);\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await provider.request({\n          method: \"net_version\",\n        });\n        console.log(\"networkId\", networkId);\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          provider.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          provider.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n          \n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        console.log(\"error\", err, \" message\", err.message);\n        if (\n          typeof err !== \"undefined\" &&\n          typeof err.message !== \"undefined\" &&\n          err.message.includes(\"User Rejected\")\n        ) {\n          dispatch(connectFailed(\"User rejected the request\"));\n        } else if (\n          (typeof err === \"string\" || err instanceof String) &&\n          err.includes(\"Modal closed by user\")\n        ) {\n          dispatch(connectFailed(\"Modal closed by user\"));\n        } else {\n          dispatch(connectFailed(\"Something went wrong.\"));\n        }\n      }\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import logo from './logo.svg';\nimport './App.css';\nimport './styles/serenity_mint.css';\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\n// emailjs includes\nimport emailjs from '@emailjs/browser';\nimport { Form, Input, TextArea, Button } from \"semantic-ui-react\";\nimport Swal from \"sweetalert2\";\n\nconst SERVICE_ID = \"service_a2uwcao\";\nconst TEMPLATE_ID = \"template_gubttuf\";\nconst USER_ID = \"Da1Xnpg54YA6ACL31\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    GWEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.GWEI_COST * 1000000000;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostGwei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostGwei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostGwei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID)\n      .then((result) => {\n        console.log(result.text);\n        Swal.fire({\n          icon: \"success\",\n          title: \"Message Sent Successfully\"\n        })\n      }, (error) => {\n        console.log(error.text);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Ooops, something went wrong\",\n          text: error.text,\n        })\n      });\n    e.target.reset()\n  };\n\n    return (\n      <div>\n        <title>Serenity Token | CREATIVE DEFI TALENT AGENCY</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta charSet=\"utf-8\" />\n        <meta name=\"keywords\" content=\"We live to turn great ideas, Key Features, What We Do, Our Portfolio\" />\n        <meta name=\"description\" content=\"Serenity Token combines knowledge with expertise, design with creativity, and meaning with magic in order to connect talented artists with the crypto market as well as with our unique community of investors.\" />\n        <meta name=\"page_type\" content=\"np-template-header-footer-from-plugin\" />\n        <link rel=\"icon\" href=\"SerenityLogo_32.png\" size=\"32x32\" />\n        <link rel=\"icon\" href=\"SerenityLogo_128.png\" size=\"128x128\" />\n        {/*jQuery 3.6.0*/}\n        {/*Google Fonts*/}\n        <link id=\"u-theme-google-font\" rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i|Bai+Jamjuree:200,200i,300,300i,400,400i,500,500i,600,600i,700,700i\" />\n        <link id=\"u-page-google-font\" rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Bai+Jamjuree:200,200i,300,300i,400,400i,500,500i,600,600i,700,700i\" />\n        {/*Bootstrap 5.2.0*/}\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossOrigin=\"anonymous\" />\n        <nav id=\"serenity-navbar\" className=\"navbar navbar-expand-sm fixed-top navbar-dark\">\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"https://serenitytoken.art/\">\n              <img src=\"SerenityLogo_r.png\" style={{height: '70px'}} />\n              <span className=\"heading-text\">SERENITY</span>\n            </a>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarMenu\">\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className=\"navbar-collapse collapse justify-content-right\" id=\"navbarMenu\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://serenitytoken.art/#serenityBody\">Home</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://serenitytoken.art/Content/files/SerenityWhitepaper.pdf\" target=\"_blank\">Whitepaper</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://serenitytoken.art/#tokenomics\">Tokenomics</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://serenitytoken.art/#about\">About</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://serenitytoken.art/#roadmap\">Roadmap</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://serenitytoken.art/#charity\">Charity</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://serenitytoken.art/nft.html\">NFTs</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://serenitytoken.art/#team\">Team</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n        <section className=\"collection\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-6 character-pos\">\n                <div className=\"row\">\n                  <div className=\"col-12\" style={{marginLeft: '-25px'}}>\n                    <img className=\"character\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-6 col-12 order-sm-3\" style={{display: 'table'}}>\n                <div className=\"row\" style={{display: 'table-cell', verticalAlign: 'middle'}}>\n                  <div className=\"col-12 mint-info\">\n                    {/*this is where the mint info will appear*/}\n                    <div className=\"row\">\n                      <div className=\"col-12 title\" />\n                      <div className=\"col-12\">\n                        Make sure you are connected to the right network (Ethereum Mainnet) and the correct address.\n                        <br />\n                        Please note: Once you make the purchase, you cannot undo this action.\n                        <br /><br /><br />\n                        We have set the gas limit to 180000 for the contract to successfully mint your NFT.\n                        <br />\n                        We recommend that you don't lower the gas limit.\n                      </div>\n                      <div className=\"col-12\" style={{marginTop: '25px'}}>\n                        1 <span className=\"collection-name\" /> costs <span className=\"collection-cost\" /> ETH + Gas Fees\n                      </div>\n                      <div className=\"col-12\" style={{marginTop: '25px'}}>\n                        Total <span className=\"collection-name\" /> Minted\n                      </div>\n                    </div>\n                    {/* this is where the mint dApp should go */}\n                    <div className=\"row\">\n                      <div className=\"col-3\">\n                        <span className=\"total-minted\">???</span> / <span className=\"collection-total\" />\n                      </div>\n                      <div className=\"col-9\">\n                        <div className=\"border\">\n                          {/* progress bar */}\n                          <div className=\"mint-progress-bar\">&nbsp;</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\" style={{marginTop: '15px'}}>\n                      <div className=\"col-12 col-md-6 mint-offset\">\n                        <div className=\"row\">\n                          <div className=\"col-2\"><div className=\"round-button\">-</div></div>\n                          <div className=\"col-8\"><input type=\"text\" id=\"mint-amount\" /></div>\n                          <div className=\"col-2\"><div className=\"round-button\">+</div></div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\" style={{marginTop: '15px'}}>\n                      <div className=\"col-12 col-md-6 mint-offset\">\n                        <button type=\"button\" name=\"mint\" id=\"mint-button\">Mint</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n        <React.StrictMode>\n        <App />\n        </React.StrictMode>\n        );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}